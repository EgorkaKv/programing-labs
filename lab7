"""лабораторна 5"""


def logger(exception, rezim):
    def decorate(func):
        def wrapper(*args, **kwargs):
            pass
        return wrapper
    return decorate

class File:
    """Клас для определения файлов"""

    def __init__(self, name, extension, size, place='Desktop/'):
        self.name = name
        self.extension = extension
        self.size = size
        self.place = place

    def replace(self, new):
        """метод для перезаписи положения файла"""
        self.place = new

    def __str__(self):
        return f'class: File, name: {self.name}, ext: {self.extension}'


class Folder:
    """Клас для определения папок"""

    def __init__(self, name, fold_list='', file_list='', place='Desktop/'):
        self.name = name
        self.folders = fold_list
        self.files = file_list
        self.place = place
        self.replace()


    def replace(self, new='Desktop/'):
        """перезапись положения папки и всех вложенностей"""
        self.place = new
        for i in self.folders:
            i.replace(self.place + self.name + '/')
        for i in self.files:
            i.replace(self.place + self.name)

    def __str__(self):
        return f'class: File, name: {self.name}, place: {self.place}'


class PathExcept(Exception):
    pass

@logger(excep, input())
def path(top=''):
    """функция для вывода дерева файловой системы"""
    s = '    '
    tab = len(top.place.split('/')) - 2
    if len(top.folders) > 0 or len(top.files) > 0:
        coms = ':'
    else:
        coms = ''
    print(s * tab + top.name + coms)
    for i in top.folders:
        path(top=i)
    for i in top.files:
        print(s * (tab + 1) + i.name + i.extension)


if __name__ == '__main__':
    test = File('test', '.py', 100)
    exam = File('exam', '.exe', 2354)
    pak = File('pak', '.txt', 10)
    wym = File('wym', '.ccp', 6666)
    rek = File('rek','.md', 1)

    tet = Folder('tet', [], [pak, rek])
    pit = Folder('pit', [tet], [test])
    tup = Folder('tup')
    laba = Folder('laba', [pit,tup], [exam,wym])

    try:
        path(top=lab)
    except NameError as e:
        excep = e


